/*
Package v1 GENERATED BY gengo:objectkind
DON'T EDIT THIS FILE
*/
package v1

import (
	productv1 "github.com/octohelm/objectkind/internal/example/apis/product/v1"
	pkgruntime "github.com/octohelm/objectkind/pkg/runtime"
)

func (Order) GetKind() string {
	return "Order"
}

func (Order) GetPluralizedKind() string {
	return "Orders"
}

func (Order) GetAPIVersion() string {
	return SchemeGroupVersion.String()
}

func (OrderItem) GetKind() string {
	return "OrderItem"
}

func (OrderItem) GetPluralizedKind() string {
	return "OrderItems"
}

func (OrderItem) GetAPIVersion() string {
	return SchemeGroupVersion.String()
}

func (OrderItemRequestForCreate) GetKind() string {
	return "OrderItem"
}

func (OrderItemRequestForCreate) GetPluralizedKind() string {
	return "OrderItems"
}

func (OrderItemRequestForCreate) GetAPIVersion() string {
	return SchemeGroupVersion.String()
}

func (src *OrderItem) AsOrderItemRequestForCreate() *OrderItemRequestForCreate {
	dst := pkgruntime.New[OrderItemRequestForCreate]()
	pkgruntime.CopyObject(dst, src)
	copySpec := func(d *OrderItemSpecRequestForCreate, s *OrderItemSpec) {
		if s.Sku != nil {
			copySku := func(d *productv1.SkuReference, s *productv1.Sku) {
				pkgruntime.CopyCodableObject(d, s)
			}
			copySku(&d.Sku, s.Sku)

		}
		d.Quantity = s.Quantity
	}
	copySpec(&dst.Spec, &src.Spec)

	return dst
}

func (src *OrderItemRequestForCreate) AsOrderItem() *OrderItem {
	dst := pkgruntime.New[OrderItem]()
	pkgruntime.Copy(dst, src)
	copySpec := func(d *OrderItemSpec, s *OrderItemSpecRequestForCreate) {
		copySku := func(d *productv1.Sku, s *productv1.SkuReference) {
			pkgruntime.CopyObject(d, s)
		}
		if d.Sku == nil {
			d.Sku = new(productv1.Sku)
		}
		copySku(d.Sku, &s.Sku)
		d.Quantity = s.Quantity
	}
	copySpec(&dst.Spec, &src.Spec)

	return dst
}

func (OrderRequestForCreate) GetKind() string {
	return "Order"
}

func (OrderRequestForCreate) GetPluralizedKind() string {
	return "Orders"
}

func (OrderRequestForCreate) GetAPIVersion() string {
	return SchemeGroupVersion.String()
}

func (src *Order) AsOrderRequestForCreate() *OrderRequestForCreate {
	dst := pkgruntime.New[OrderRequestForCreate]()
	pkgruntime.CopyObject(dst, src)
	copySpec := func(d *OrderSpecRequestForCreate, s *OrderSpec) {
		d.Items = make([]*OrderItemRequestForCreate, len(s.Items))
		for i, x := range s.Items {
			d.Items[i] = x.AsOrderItemRequestForCreate()
		}
	}
	copySpec(&dst.Spec, &src.Spec)

	return dst
}

func (src *OrderRequestForCreate) AsOrder() *Order {
	dst := pkgruntime.New[Order]()
	pkgruntime.Copy(dst, src)
	copySpec := func(d *OrderSpec, s *OrderSpecRequestForCreate) {
		d.Items = make([]*OrderItem, len(s.Items))
		for i, x := range s.Items {
			d.Items[i] = x.AsOrderItem()
		}
	}
	copySpec(&dst.Spec, &src.Spec)

	return dst
}
